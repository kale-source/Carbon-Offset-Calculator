import streamlit as st
import matplotlib.pyplot as plt

# Inicializa 'calculos' no session_state se ainda n√£o existir
if 'calculos' not in st.session_state:
    st.session_state['calculos'] = []
if 'calculos_de_consumo' not in st.session_state:
    st.session_state['calculos_de_consumo'] = []

# Fun√ß√£o para atualizar e exibir o gr√°fico
def atualizar_grafico():
    st.title("An√°lise de Dados üìä")

    # Verifica se h√° c√°lculos armazenados
    if st.session_state['calculos']:
        # Limpa o gr√°fico anterior
        plt.clf()

        # Extrai os dados para o gr√°fico
        tipos_de_veiculos = [
            f"{i['tipo_veiculo']} - {i['potencia']} ({i['combustivel']})"
            for i in st.session_state['calculos']
        ]
        emissao_valores = [
            float(i['emissao']) for i in st.session_state['calculos']
        ]


        st.header("Resultados de Ve√≠culos")
        # Cria o gr√°fico
        fig, ax = plt.subplots(figsize=(10, 5))
        ax.bar(tipos_de_veiculos, emissao_valores, color='blue')
        ax.set_title('Emiss√µes de CO‚ÇÇ por Tipo de Ve√≠culo')
        ax.set_xlabel('Tipo de Ve√≠culo')
        ax.set_ylabel('Emiss√£o de CO‚ÇÇ (kg)')
        ax.tick_params(axis='x', rotation=45)
        plt.tight_layout()

        # Exibe o gr√°fico no Streamlit
        st.pyplot(fig)
    else:
        st.write("Nenhum c√°lculo de ve√≠culo realizado at√© o momento.")
    
    if st.session_state['calculos_de_consumo']:
        # Limpa o gr√°fico anterior
        plt.clf()

        # Extrai os dados para o gr√°fico
        tipos_de_matriz = [
            f"{i['matriz']} - {i['consumokWh']} kWh"
            for i in st.session_state['calculos_de_consumo']
        ]
        emissao_valores = [
            float(i['emissao']) for i in st.session_state['calculos_de_consumo']
        ]


        st.header("Resultados de Consumo Energ√©tico")
        # Cria o gr√°fico
        fig, ax = plt.subplots(figsize=(10, 5))
        ax.bar(tipos_de_matriz, emissao_valores, color='grey')
        ax.set_title('Emiss√µes de CO‚ÇÇ por Tipo de Matriz')
        ax.set_xlabel('Tipo de Matriz')
        ax.set_ylabel('Emiss√£o de CO‚ÇÇ (kg)')
        ax.tick_params(axis='x', rotation=45)
        plt.tight_layout()

        # Exibe o gr√°fico no Streamlit
        st.pyplot(fig)
    
    else:
        st.write("Nenhum c√°lculo de ve√≠culo realizado at√© o momento.")

atualizar_grafico()

# Bot√£o para limpar os c√°lculos
if st.session_state['calculos'] or st.session_state['calculos_de_consumo']:
    if (st.button("Limpar c√°lculos")):
        st.session_state['calculos'] = []
        st.session_state['calculos_de_consumo'] = []
    
