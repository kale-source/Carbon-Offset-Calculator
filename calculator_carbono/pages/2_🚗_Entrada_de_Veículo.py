import streamlit as st
from functions.emissao_carbono import *

# Inicializa o session state se n√£o existir
if 'calculos' not in st.session_state:
    st.session_state['calculos'] = []  # Inicializar com lista vazia se ainda n√£o existir

# Fun√ß√£o para mostrar inputs e realizar c√°lculos
def mostrar_input():
    st.title("Entrada de Ve√≠culo üöó")

    # Sele√ß√£o do tipo de ve√≠culo
    tipo_veiculo = st.selectbox("Selecione o tipo de ve√≠culo:", ["Carro", "Moto", "Caminh√£o"], key="tipo_veiculo")
    
    # Placeholder para entradas adicionais com base no tipo de ve√≠culo
    if tipo_veiculo == "Carro":
        potencia = st.selectbox("Pot√™ncia do Motor:", ["1.0 a 1.2", "1.4 a 1.6", "1.8 a 2.0", "Acima de 2.0"], key="potencia")
        tipo_combustivel = st.selectbox("Tipo de combust√≠vel:", [
            "Gasolina", 
            "Diesel", 
            "Etanol"
        ], key="tipo_combustivel")

        km_percorrido = st.number_input("Dist√¢ncia percorrida em km:", min_value=1, key="km_percorrido")

        if km_percorrido > 0:
            if st.button("Calcular", key="calcular_button"):
                # C√°lculo da emiss√£o
                resultado = emissoesVeiculos(km_percorrido, potencia, tipo_combustivel)
                
                # Armazenar o resultado com informa√ß√µes detalhadas no session state
                st.session_state['calculos'].append({
                    'tipo_veiculo': tipo_veiculo,
                    'potencia': potencia,
                    'combustivel': tipo_combustivel,
                    'emissao': resultado,
                    'distancia': km_percorrido
                })

                st.write(f"Emiss√£o: {resultado} KG de CO‚ÇÇ")
                st.success("C√°lculo realizado! Visualize o hist√≥rico de c√°lculos e a an√°lise de dados nos menus ao lado.")

        else:
            st.warning("Dist√¢ncia precisa ser maior que zero!")
    
    elif tipo_veiculo == "Moto":
        potencia = st.selectbox("Pot√™ncia do Motor:", ["125 a 150 cilindradas", "250 a 300 cilindradas", "Acima de 300 cilindradas"], key="potencia")
        tipo_combustivel = st.selectbox("Tipo de combust√≠vel:", [
            "Gasolina", 
            "Diesel", 
            "Etanol"
        ], key="tipo_combustivel")

        km_percorrido = st.number_input("Dist√¢ncia percorrida em km:", min_value=1, key="km_percorrido")

        if km_percorrido > 0:
            if st.button("Calcular", key="calcular_button"):
                # C√°lculo da emiss√£o
                resultado = emissoesVeiculos(km_percorrido, potencia, tipo_combustivel)
                
                # Armazenar o resultado com informa√ß√µes detalhadas no session state
                st.session_state['calculos'].append({
                    'tipo_veiculo': tipo_veiculo,
                    'potencia': potencia,
                    'combustivel': tipo_combustivel,
                    'emissao': resultado,
                    'distancia': km_percorrido
                })

                st.write(f"Emiss√£o: {resultado} KG de CO‚ÇÇ")
                st.success("C√°lculo realizado! Visualize o hist√≥rico de c√°lculos e a an√°lise de dados nos menus ao lado.")

        else:
            st.warning("Dist√¢ncia precisa ser maior que zero!")
    
    elif tipo_veiculo == "Caminh√£o":
        potencia = st.selectbox("Pot√™ncia do Motor:", ["Caminh√£o Leve", "Caminh√£o M√©dio", "Caminh√£o Pesado"], key="potencia")
        tipo_combustivel = st.selectbox("Tipo de combust√≠vel:", [
            "Gasolina", 
            "Diesel", 
            "Etanol"
        ], key="tipo_combustivel")
        
        km_percorrido = st.number_input("Dist√¢ncia percorrida em km:", min_value=1, key="km_percorrido")

        if km_percorrido > 0:
            if st.button("Calcular", key="calcular_button"):
                # C√°lculo da emiss√£o
                resultado = emissoesVeiculos(km_percorrido, potencia, tipo_combustivel)
                
                # Armazenar o resultado com informa√ß√µes detalhadas no session state
                st.session_state['calculos'].append({
                    'tipo_veiculo': tipo_veiculo,
                    'potencia': potencia,
                    'combustivel': tipo_combustivel,
                    'emissao': resultado,
                    'distancia': km_percorrido
                })

                st.write(f"Emiss√£o: {resultado} KG de CO‚ÇÇ")
                st.success("C√°lculo realizado! Visualize o hist√≥rico de c√°lculos e a an√°lise de dados nos menus ao lado.")

        else:
            st.warning("Dist√¢ncia precisa ser maior que zero!")


mostrar_input()




